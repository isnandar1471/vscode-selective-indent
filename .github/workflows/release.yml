name: Release and Publish

on:
  workflow_run:
    workflows:
      - "Test"
    types:
      - completed

permissions:
  contents: write

jobs:
  release:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Get version and name from package.json
        id: meta
        run: |
          VERSION=$(node -p "require('./package.json').version")
          NAME=$(node -p "require('./package.json').name")
          VSIX_FILE="$NAME-$VERSION.vsix"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "name=$NAME" >> $GITHUB_OUTPUT
          echo "vsix_file=$VSIX_FILE" >> $GITHUB_OUTPUT

      - name: Check if tag already exists
        id: tag_check
        run: |
          TAG=v${{ steps.meta.outputs.version }}
          if git ls-remote --tags origin | grep -q "refs/tags/$TAG"; then
            echo "Tag $TAG already exists. Skipping tag creation."
            echo "skip_tag=true" >> $GITHUB_OUTPUT
          else
            echo "skip_tag=false" >> $GITHUB_OUTPUT
          fi

      - name: Exit if tag already exists
        if: steps.tag_check.outputs.skip_release == 'true'
        run: exit 0

      - name: Package VS Code Extension
        run: npx vsce package

      - name: Publish to VS Code Marketplace
        run: npx vsce publish --pat ${{ secrets.VSCE_PAT }}

      - name: Get .vsix filename
        id: vsix
        run: |
          FILE=$(ls *.vsix | head -n 1)
          echo "file=$FILE" >> $GITHUB_OUTPUT

      - name: Create Git tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag v${{ steps.meta.outputs.version }}
          git push origin v${{ steps.meta.outputs.version }}

      - name: Upload VSIX to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.meta.outputs.version }}
          files: ${{ steps.vsix.outputs.file }}

      - name: Post release summary
        run: |
          echo "âœ… Extension v${{ steps.meta.outputs.version }} released and published to the VS Code Marketplace."
